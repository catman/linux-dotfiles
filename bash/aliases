
alias sas='cat ~/bin/dotfiles/bash/aliases | grep'
alias eenv='vi ~/bin/dotfiles/bash/env'
alias econf='vi ~/bin/dotfiles/bash/config'
alias ea='vi -w ~/bin/dotfiles/bash/aliases && reload'
alias reload='source ~/bin/dotfiles/bash/aliases'
alias rele='source ~/bin/dotfiles/bash/env'

alias edhosts='vi /etc/hosts'

# navigation
# ==========
#alias a='ls -A' 			# -A all except literal . ..
alias la='ls -A -l -G'		# colored, all, long format
alias l='ls -lahG'  			# -l long listing, -G color,
alias ll='ls -lhG'  		# -l long listing, human readable, no group info
alias lw='ls -aw'			# list wide format
alias lh='ls -al'			# list all long
alias lt='ls -lt $1 | more'	# sort most recent first
alias s='cd ..; l '   		# up one dir and list
alias d='cd ./$1; l '   	# down one dir and list
alias tz='tree --du -h -L 2'
alias ld='ls -Cd */'			# list only directories

## auto color grep
# alias grep='grep --color=auto'
alias egrep='egrep --color=auto'
alias fgrep='fgrep --color=auto'

alias topc='top -o cpu -n 40'
alias topm='top -o vsize -n 40'
alias topj='top -pid `pgrep java | tr "\\n" "," | sed "s/,$//"`'

alias cdlog='cd /var/log'
alias llog='l /var/log'

# git
alias gaa='git add -A .' # git add all
alias glog='git l' # destroyallsoftware pritty print log -> cat ~/.gitconfig
alias gpc='cat ~/.gitconfig'
alias gcl1='git clone --depth 1' # clones just the latest complete version
alias gs='git status'
alias gpull='git pull'
alias gpush='git push'
alias gdif='git diff | mate'
alias gcom='git commit -v'
alias gca='git commit -v -a'
alias gbr='git branch'
alias gbra='git branch -a'
alias gco='git checkout'
alias gd='git diff'
alias gnp='git-notpushed'
alias ga='git add'
alias ginit='git init'
alias gemflock='git add Gemfile Gemfile.lock'
alias glist='git ls-files'
alias grm='git rm'
alias glog='git log'
alias gsl='git ls-tree --name-only -r HEAD'
alias gdl='git diff-tree --name-only -r HEAD'
alias ggitign='mate ~/.gitignore_global'
alias greset='git reset --hard origin/master'  # overwrite, reset local changes
alias ungit="find . -name '.git' -exec rm -rf {} \;"
function gg() {
    git commit -v -a -m "$*" # function gg
} 	# Commit pending changes and quote all args as message

alias ifc='ifconfig | grep'

# note taking
alias pan="echo >> notes.txt; pbpaste >> notes.txt;  cat notes.txt; echo crlf "

# <meta http-equiv="refresh" content="0; url=http://example.com/" />
function pah() {
	url2 < pbpaste
	echo $url2
}

# disk usage
# ==========
alias dum='du -mhc'
alias dums='du . | sort -nr'
alias dum0='du -d 0 -mhc .'
alias dum1='du -d 1 -mhc .'
alias dumb="du -h . | grep '[0-9\.]\+G\t'"
alias ddiff='diff -rq' # diff directories

# gzip
alias unzip="tar -xzvf" 		# unzips -x decompress flag -v verbose -f file
alias zip="tar -czvf" 		# zips -c create -z gzip compression -v verbose -f file
alias curlo="curl -O" 	# outputs to remote file name

alias sett='set | more'
alias gset='set | grep'
alias ss='alias | grep $1'

#  https://docs.docker.com/engine/reference/commandline/ps/#formatting
alias dr='docker'
alias drp="docker ps --format 'table {{.Names}}\t{{.Image}}\t{{.Ports}}\t{{.Status}}\t{{.ID}}'"
alias dra="docker ps -a --format 'table {{.Names}}\t{{.Image}}\t{{.Ports}}\t{{.Status}}\t{{.ID}}\t{{.Mounts}}'"
alias dri='docker images'
alias dm='docker-machine'

function mantxt() {
	man $1 | col -b > man_$1.txt
}
function fman(){
	man $1 | grep $2 -C4
}

function ff() {
find . -name $1 # -> ff
} # find in current directory
function fff() {
		sudo find / -name $1 # -> fff
}	# find all file
function fif() {  # grep -nir $1 .
		grep -nir $1 .
}

# screen
# ======
alias c='clear'
alias cdd='cd -'  			# goto last dir cd'ed from
alias cl='clear; l'
alias cls='clear; ls'

# history commands
# ================
# http://reviews.cnet.com/8301-13727_7-57561873-263/using-and-managing-the-terminal-history-in-os-x/
# history writes to store when terminal closes
# use 'history -r' to read from store while in another terminal, 'history -c' clears current, 'history -w' writes to store
alias hnum2='!-2'						# runs 3rd last command
alias h='history'
alias fh='history | grep'		# find history
alias hlast='!!'						# run last history command
alias hprefix='!pico'				# to rerun last 'pico ...' command
